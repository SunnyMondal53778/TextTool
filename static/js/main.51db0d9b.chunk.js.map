{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","role","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","placeholder","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.51db0d9b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li> */}\r\n            <li className=\"nav-item dropdown\">\r\n              <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                Dropdown\r\n              </a>\r\n              <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n                <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n                <li><hr className=\"dropdown-divider\" /></li>\r\n                <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n              </ul>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <a className=\"nav-link disabled\">Disabled</a> */}\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'} mx-1`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n          {/* <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form> */}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n  aboutText: \"About\"\r\n\r\n}","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked: \" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Coverted to uppercase\",\"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n        // console.log(\"Uppercase was clicked: \" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Coverted to lowercase\",\"success\");\r\n    }\r\n    const handleClearClick = ()=>{\r\n        // console.log(\"Uppercase was clicked: \" + text);\r\n        let newText = \"\";\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared\",\"success\");\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy = ()=>{\r\n        var text = document.getElementById('myBox');\r\n        text.select();\r\n        text.setSelectionRange(0, 9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text Copied to Clipboard\",\"success\");\r\n    }\r\n    const handleExtraSpaces = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra Spaces \",\"success\");\r\n    }\r\n    const [text, setText] = useState('');\r\n    // text = \"new text\"; Wrong way to change the state\r\n    // setText(\"new text\"); //Correct way to change the state\r\n    return (\r\n        <>\r\n        <div className = \"container\" style={{color: props.mode === 'dark'?'white':'black'}}>        \r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                {/* <label for=\"myBox\" class=\"form-label\">Example textarea</label> */}\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode === 'dark'?'grey':'white',color: props.mode === 'dark'?'white':'black'}} id=\"myBox\" rows=\"8\" placeholder =\"Enter Your Text Here\" ></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert To Upper Case</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert To Lower Case</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-2\" style={{color: props.mode === 'dark'?'white':'black'}}>\r\n            <h1>Your Text Summary</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text: 'Enter Something in the textbox to preview it here'}</p>\r\n        </div>\r\n        </> \r\n    )\r\n}\r\n","import React from 'react'\r\nfunction Alert(props) {\r\n\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","// import logo from './logo.svg';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode has been enabled\", \"Success\");\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About Textutils\" /> */}\n      {/* <Navbar/> */}\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch> */}\n            {/* exact path used to match the exact path in react dom, else partial matching will be occur and the 1st page will be rendered instead of 2nd\n            /users --> Component 1\n            /users/home --> Component 2 */}\n            {/* <Route exact path=\"/about\">\n              <About />\n            </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm showAlert={showAlert} heading=\"Enter the text to Analyze Below\" mode={mode} />\n\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}